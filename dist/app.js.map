{"version":3,"sources":["../server/app.js"],"names":["require","SocketServer","app","port","process","env","PORT","compiler","use","req","res","next","header","publicPath","output","historyApiFallback","stats","colors","sendFile","resolve","server","listen","err","console","error","log","NODE_ENV","SS","on","socket","id","namespaceSender","of","namespaceReceiver","pid","data","name","emit"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAPA;AASAA,QAAQ,eAAR;;AAEA,IAAMC,eAAeD,QAAQ,UAAR,CAArB;;AAEA,IAAME,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,WAAW,yCAAjB;;AAEAL,IAAIM,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJD;;AAMAT,IAAIM,GAAJ,CAAQ,oCAAqBD,QAArB,EAA+B;AACrCM,cAAY,kBAAOC,MAAP,CAAcD,UADW;AAErCE,sBAAoB,IAFiB;AAGrCC,SAAO,EAAEC,QAAQ,IAAV;AAH8B,CAA/B,CAAR;;AAMAf,IAAIM,GAAJ,CAAQ,oCAAqBD,QAArB,CAAR;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIQ,QAAJ,CAAa,eAAKC,OAAL,CAAa,iBAAb,CAAb;AACD,CAFD;;AAIA;;AAEA,IAAMC,SAASlB,IAAImB,MAAJ,CAAWlB,IAAX,EAAiB,UAACmB,GAAD,EAAS;AACvC,MAAIA,GAAJ,EAAS;AACPC,YAAQC,KAAR,CAAcF,GAAd;AACA;AACD;AACDC,UAAQE,GAAR,CAAY,wBAAZ,EAAsCtB,IAAtC,EAA4C,IAA5C,EAAkDC,QAAQC,GAAR,CAAYqB,QAA9D;AACD,CANc,CAAf;;AAQA;;AAEA,IAAMC,KAAK,IAAI1B,YAAJ,CAAiB,EAAEmB,cAAF,EAAjB,CAAX;;AAEAO,GAAGC,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9BN,UAAQE,GAAR,aAAsBI,OAAOC,EAA7B;;AAEAD,SAAOD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5BL,YAAQE,GAAR,aAAsBI,OAAOC,EAA7B;AACD,GAFD;AAGD,CAND;;AAQA,IAAMC,kBAAkBJ,GAAGK,EAAH,CAAM,SAAN,CAAxB;AACA,IAAMC,oBAAoBN,GAAGK,EAAH,CAAM,WAAN,CAA1B;;AAEAC,kBAAkBL,EAAlB,CAAqB,YAArB,EAAmC,UAACC,MAAD,EAAY;AAC7CN,UAAQE,GAAR,sBAA+BI,OAAOC,EAAtC,0BAA4D1B,QAAQ8B,GAApE;AACD,CAFD;;AAIAH,gBAAgBH,EAAhB,CAAmB,YAAnB,EAAiC,UAACC,MAAD,EAAY;AAC3CN,UAAQE,GAAR,oBAA6BI,OAAOC,EAApC,0BAA0D1B,QAAQ8B,GAAlE;;AAEAL,SAAOD,EAAP,CAAU,SAAV,EAAqB,UAACO,IAAD,EAAU;AAC7BZ,YAAQE,GAAR,oBAA6BU,KAAKC,IAAlC;AACAH,sBAAkBI,IAAlB,CAAuB,SAAvB,EAAkCF,IAAlC;AACD,GAHD;AAID,CAPD;;;;;;;;gCAnDMjC,G;;gCACAC,I;;gCACAI,Q;;gCAsBAa,M;;gCAUAO,E;;gCAUAI,e;;gCACAE,iB","file":"app.js","sourcesContent":["/* eslint no-console: 0 */\nimport express from 'express';\nimport path from 'path';\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\n\nimport config from '../webpack.config';\n\nrequire('dotenv/config');\n\nconst SocketServer = require('./socket');\n\nconst app = express();\nconst port = process.env.PORT || 3030;\nconst compiler = webpack(config);\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n\napp.use(webpackDevMiddleware(compiler, {\n  publicPath: config.output.publicPath,\n  historyApiFallback: true,\n  stats: { colors: true },\n}));\n\napp.use(webpackHotMiddleware(compiler));\n\napp.use('*', (req, res) => {\n  res.sendFile(path.resolve('dist/index.html'));\n});\n\n/* listen */\n\nconst server = app.listen(port, (err) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log('Server running on port', port, 'on', process.env.NODE_ENV);\n});\n\n/* socket */\n\nconst SS = new SocketServer({ server });\n\nSS.on('connection', (socket) => {\n  console.log(`\\nBot: ${socket.id} está online. :)`);\n\n  socket.on('disconnect', () => {\n    console.log(`\\nBot: ${socket.id} se desconectou. :(`);\n  });\n});\n\nconst namespaceSender = SS.of('/sender');\nconst namespaceReceiver = SS.of('/receiver');\n\nnamespaceReceiver.on('connection', (socket) => {\n  console.log(`\\nReceiver Bot: ${socket.id} está online. :)`, process.pid);\n});\n\nnamespaceSender.on('connection', (socket) => {\n  console.log(`\\nSender Bot: ${socket.id} está online. :)`, process.pid);\n\n  socket.on('message', (data) => {\n    console.log(`\\nSocket Bot: ${data.name} enviou uma mensagem.`);\n    namespaceReceiver.emit('message', data);\n  });\n});\n"]}