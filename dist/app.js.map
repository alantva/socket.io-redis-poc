{"version":3,"sources":["../server/app.js"],"names":["require","SocketServer","app","port","process","env","PORT","compiler","use","req","res","next","header","publicPath","output","historyApiFallback","stats","colors","sendFile","resolve","server","listen","err","console","error","log","NODE_ENV","pm_id"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AATA;AAWAA,QAAQ,eAAR;;AAEA,IAAMC,eAAeD,QAAQ,UAAR,CAArB;;AAEA,IAAME,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,WAAW,yCAAjB;;AAEAL,IAAIM,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJD;;AAMAT,IAAIM,GAAJ,CAAQ,oCAAqBD,QAArB,EAA+B;AACrCM,cAAY,kBAAOC,MAAP,CAAcD,UADW;AAErCE,sBAAoB,IAFiB;AAGrCC,SAAO,EAAEC,QAAQ,IAAV;AAH8B,CAA/B,CAAR;;AAMAf,IAAIM,GAAJ,CAAQ,oCAAqBD,QAArB,CAAR;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIQ,QAAJ,CAAa,eAAKC,OAAL,CAAa,iBAAb,CAAb;AACD,CAFD;;AAIA;;AAEA,IAAMC,SAASlB,IAAImB,MAAJ,CAAWlB,IAAX,EAAiB,UAACmB,GAAD,EAAS;AACvC,MAAIA,GAAJ,EAAS;AACPC,YAAQC,KAAR,CAAcF,GAAd;AACA;AACD;AACDC,UAAQE,GAAR,CAAY,wBAAZ,EAAsCtB,IAAtC,EAA4C,IAA5C,EAAkDC,QAAQC,GAAR,CAAYqB,QAA9D;AACD,CANc,CAAf;;AAQA;;AAEAzB,aAAa,EAAEmB,cAAF,EAAb;;AAEA,IAAIhB,QAAQC,GAAR,CAAYsB,KAAZ,KAAsB,GAA1B,EAA+B;AAC7B;AACA;AACD;;;;;;;;gCAvCKzB,G;;gCACAC,I;;gCACAI,Q;;gCAsBAa,M","file":"app.js","sourcesContent":["/* eslint no-console: 0 */\nimport express from 'express';\nimport path from 'path';\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\n\nimport config from '../webpack.config';\nimport { clear as ClearClient } from './socket/Client.Redis';\nimport { clear as ClearQueue } from './socket/Queue.Redis';\n\nrequire('dotenv/config');\n\nconst SocketServer = require('./socket');\n\nconst app = express();\nconst port = process.env.PORT || 3030;\nconst compiler = webpack(config);\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n\napp.use(webpackDevMiddleware(compiler, {\n  publicPath: config.output.publicPath,\n  historyApiFallback: true,\n  stats: { colors: true },\n}));\n\napp.use(webpackHotMiddleware(compiler));\n\napp.use('*', (req, res) => {\n  res.sendFile(path.resolve('dist/index.html'));\n});\n\n/* listen */\n\nconst server = app.listen(port, (err) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log('Server running on port', port, 'on', process.env.NODE_ENV);\n});\n\n/* socket */\n\nSocketServer({ server });\n\nif (process.env.pm_id === '0') {\n  ClearClient();\n  ClearQueue();\n}\n"]}