{"version":3,"sources":["../../server/socket/index.js"],"names":["io","require","redis","cookieParser","User","Customer","module","exports","opts","server","serverOpts","defaultOpts","pingTimeout","pingInterval","serveClient","ioOpts","extend","SocketServer","adapter","host","process","env","REDIS_URL","port","REDIS_PORT","use","on","namespaceUser","of","namespaceCustomer"],"mappings":";;AACA;;;;;;AAEA,IAAMA,KAAKC,QAAQ,WAAR,CAAX,C,CAHA;;AAIA,IAAMC,QAAQD,QAAQ,iBAAR,CAAd;AACA,IAAME,eAAeF,QAAQ,kBAAR,CAArB;;AAEA,IAAMG,OAAOH,QAAQ,QAAR,CAAb;AACA,IAAMI,WAAWJ,QAAQ,YAAR,CAAjB;;AAEAK,OAAOC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,MAAMC,SAASD,KAAKC,MAAL,IAAe,IAA9B;AACA,MAAMC,aAAaF,KAAKE,UAAL,IAAmB,EAAtC;AACA,MAAMC,cAAc;AAClBC,iBAAa,KADK;AAElBC,kBAAc,IAFI;AAGlBC,iBAAa;AAHK,GAApB;AAKA,MAAMC,SAAS,iBAAEC,MAAF,CAAS,EAAT,EAAaL,WAAb,EAA0BD,UAA1B,CAAf;AACA,MAAMO,eAAejB,GAAGS,MAAH,EAAWM,MAAX,CAArB;AACAE,eAAaC,OAAb,CAAqBhB,MAAM,EAAEiB,MAAMC,QAAQC,GAAR,CAAYC,SAApB,EAA+BC,MAAMH,QAAQC,GAAR,CAAYG,UAAjD,EAAN,CAArB;AACAP,eAAaQ,GAAb,CAAiBtB,YAAjB;;AAEAc,eAAaS,EAAb,CAAgB,YAAhB,EAA8B,YAAM,CAAE,CAAtC;;AAEA,MAAMC,gBAAgBV,aAAaW,EAAb,CAAgB,OAAhB,CAAtB;AACA,MAAMC,oBAAoBZ,aAAaW,EAAb,CAAgB,WAAhB,CAA1B;;AAEAxB,OAAKuB,aAAL,EAAoBE,iBAApB;AACAxB,WAASwB,iBAAT,EAA4BF,aAA5B;;AAEA,SAAOV,YAAP;AACD,CAtBD","file":"index.js","sourcesContent":["/*  eslint no-console: 0 */\nimport _ from 'lodash';\n\nconst io = require('socket.io');\nconst redis = require('socket.io-redis');\nconst cookieParser = require('socket.io-cookie');\n\nconst User = require('./User');\nconst Customer = require('./Customer');\n\nmodule.exports = (opts) => {\n  const server = opts.server || null;\n  const serverOpts = opts.serverOpts || {};\n  const defaultOpts = {\n    pingTimeout: 60000,\n    pingInterval: 1000,\n    serveClient: false,\n  };\n  const ioOpts = _.extend({}, defaultOpts, serverOpts);\n  const SocketServer = io(server, ioOpts);\n  SocketServer.adapter(redis({ host: process.env.REDIS_URL, port: process.env.REDIS_PORT }));\n  SocketServer.use(cookieParser);\n\n  SocketServer.on('connection', () => {});\n\n  const namespaceUser = SocketServer.of('/user');\n  const namespaceCustomer = SocketServer.of('/customer');\n\n  User(namespaceUser, namespaceCustomer);\n  Customer(namespaceCustomer, namespaceUser);\n\n  return SocketServer;\n};\n"]}